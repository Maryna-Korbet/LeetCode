{"mappings":"AAQA,IAAIA,EAAS,SAASC,EAAMC,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,GAAK,EAClC,IAAK,IAAIE,EAAIF,EAAI,EAAGE,EAAIJ,EAAKG,OAAQC,GAAK,EACtC,GAAIJ,EAAKE,GAAKF,EAAKI,KAAOH,EACtB,MAAO,CAACC,EAAEE,IAM1BC,QAAQC,IAAIP,EAAO,CAAC,EAAE,EAAE,GAAG,IAAK,IAChCM,QAAQC,IAAIP,EAAO,CAAC,EAAE,EAAE,GAAI,IAC5BM,QAAQC,IAAIP,EAAO,CAAC,EAAE,GAAI","sources":["src/index.js"],"sourcesContent":["// Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\n// You may assume that each input would have exactly one solution, and you may not use the same element twice.\n// You can return the answer in any order.\n\n//  * @param {number[]} nums\n//  * @param {number} target\n//  * @return {number[]}\n\nvar twoSum = function(nums, target){\n    for (let i = 0; i < nums.length; i += 1) {\n        for (let j = i + 1; j < nums.length; j += 1){\n            if (nums[i] + nums[j] === target) {\n                return [i,j];\n            }\n        }\n    }\n};\n\nconsole.log(twoSum([2,7,11,15], 9));\nconsole.log(twoSum([3,2,4], 6));\nconsole.log(twoSum([3,3], 6));\n\n\n\n\n"],"names":["$1f0dc3b9307be026$var$twoSum","nums","target","i","length","j","console","log"],"version":3,"file":"index.a5c0dd7c.js.map"}